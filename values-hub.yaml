clusterGroup:
  name: hub
  isHubCluster: true
  namespaces:
    - open-cluster-management:
        operatorGroup: true
    - vault:
        operatorGroup: true
    - golang-external-secrets:
        operatorGroup: true
    - openshift-gitops-operator:
        operatorGroup: true
        labels:
          pod-security.kubernetes.io/enforce: privileged
          security.openshift.io/scc.podSecurityLabelSync: "false"
    - cert-manager-operator:
        operatorGroup: true
        targetNamespaces:
          - cert-manager-operator
        labels:
          pod-security.kubernetes.io/enforce: privileged
          security.openshift.io/scc.podSecurityLabelSync: "false"
        annotations:
          argocd.argoproj.io/sync-wave: "-1"
    - metallb-system:
        operatorGroup: true
        annotations:
          argocd.argoproj.io/sync-wave: "-1"
    - openshift-nmstate:
        operatorGroup: true
        targetNamespaces:
        - openshift-nmstate
        annotations:
          argocd.argoproj.io/sync-wave: "-1"

  subscriptions:
    acm:
      name: advanced-cluster-management
      namespace: open-cluster-management
      channel: release-2.12
  projects:
    - hub
  # Explicitly mention the cluster-state based overrides we plan to use for this pattern.
  # We can use self-referential variables because the chart calls the tpl function with these variables defined
  sharedValueFiles:
    - '/overrides/values-{{ $.Values.global.clusterPlatform }}.yaml'
  # sharedValueFiles is a flexible mechanism that will add the listed valuefiles to every app defined in the
  # applications section. We intend this to supplement and possibly even replace previous "magic" mechanisms, though
  # we do not at present have a target date for removal.
  #
  # To replicate the "classic" magic include structure, the clusterGroup would need all of these
  # sharedValueFiles, in this order:
  #   - '/overrides/values-{{ $.Values.global.clusterPlatform }}.yaml'
  #   - '/overrides/values-{{ $.Values.global.clusterPlatform }}-{{ $.Values.global.clusterVersion }}.yaml'
  #   - '/overrides/values-{{ $.Values.global.clusterPlatform }}-{{ $.Values.clusterGroup.name }}.yaml'
  #   - '/overrides/values-{{ $.Values.global.clusterVersion }}-{{ $.Values.clusterGroup.name }}.yaml"
  #   - '/overrides/values-{{ $.Values.global.localClusterName }}.yaml'

  # This kind of variable substitution will work with any of the variables the Validated Patterns operator knows
  # about and sets, so this is also possible, for example:
  #   - '/overrides/values-{{ $.Values.global.hubClusterDomain }}.yaml'
  #   - '/overrides/values-{{ $.Values.global.localClusterDomain }}.yaml'
  applications:
    acm:
      name: acm
      namespace: open-cluster-management
      project: hub
      chart: acm
      chartVersion: 0.1.*
      ignoreDifferences:
        - group: internal.open-cluster-management.io
          kind: ManagedClusterInfo
          jsonPointers:
            - /spec/loggingCA
    vault:
      name: vault
      namespace: vault
      project: hub
      chart: hashicorp-vault
      chartVersion: 0.1.*
    golang-external-secrets:
      name: golang-external-secrets
      namespace: golang-external-secrets
      project: hub
      chart: golang-external-secrets
      chartVersion: 0.1.*

    openstack-operators-installation:
      name: openstack-operators-installation
      namespace: openshift-gitops-operator
      repoURL: 'https://github.com/rh-osp-demo/showroom_osp-on-ocp.git'
      targetRevision: HEAD
      path: content/files/manifests/openstack-operators-installation
      syncPolicy:
        syncOptions:
        - CreateNamespace: true

  imperative: {}
  managedClusterGroups: {}
